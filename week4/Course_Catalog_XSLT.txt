Q1:Return a list of department titles. 

Your solution should fill in the following stylesheet: 
    <?xml version="1.0" encoding="ISO-8859-1"?>
    <xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
        <xsl:template match=...>
            ... template body ...
        </xsl:template>
        ... more templates as needed ...
    </xsl:stylesheet>


<?xml version="1.0" encoding="ISO-8859-1"?>
    <xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
        <xsl:template match="Department">
            <xsl:copy-of select="./Title"/>
        </xsl:template>
        <xsl:template match="text()"/>
    </xsl:stylesheet>


Return a list of department elements with no attributes and two subelements each: the department title and the entire Chair subelement structure. 

Your solution should fill in the following stylesheet: 
    <?xml version="1.0" encoding="ISO-8859-1"?>
    <xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
        <xsl:template match=...>
            ... template body ...
        </xsl:template>
        ... more templates as needed ...
    </xsl:stylesheet>
Note: You do not need to use "doc(..)" in your solution. It will be executed on courses.xml. 

(XSLT can be quite challenging to get right, and this problem is no exception. Congratulations if you succeed!) 


<?xml version="1.0" encoding="ISO-8859-1"?>
    <xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
        <xsl:template match="Department">
            <Department>
                <xsl:copy-of select="./Title"/>
                <xsl:copy-of select="Chair"/>
            </Department>
        </xsl:template>
        <xsl:template match="text()"/>
    </xsl:stylesheet>